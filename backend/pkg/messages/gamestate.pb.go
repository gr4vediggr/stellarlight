// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: gamestate.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GameStateUpdate struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Update:
	//
	//	*GameStateUpdate_FleetUpdate
	//	*GameStateUpdate_ConstructionUpdate
	//	*GameStateUpdate_DiplomacyUpdate
	//	*GameStateUpdate_ResourceUpdate
	//	*GameStateUpdate_SystemUpdate
	//	*GameStateUpdate_ColonyUpdate
	Update        isGameStateUpdate_Update `protobuf_oneof:"update"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStateUpdate) Reset() {
	*x = GameStateUpdate{}
	mi := &file_gamestate_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateUpdate) ProtoMessage() {}

func (x *GameStateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateUpdate.ProtoReflect.Descriptor instead.
func (*GameStateUpdate) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{0}
}

func (x *GameStateUpdate) GetUpdate() isGameStateUpdate_Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *GameStateUpdate) GetFleetUpdate() *FleetUpdate {
	if x != nil {
		if x, ok := x.Update.(*GameStateUpdate_FleetUpdate); ok {
			return x.FleetUpdate
		}
	}
	return nil
}

func (x *GameStateUpdate) GetConstructionUpdate() *ConstructionUpdate {
	if x != nil {
		if x, ok := x.Update.(*GameStateUpdate_ConstructionUpdate); ok {
			return x.ConstructionUpdate
		}
	}
	return nil
}

func (x *GameStateUpdate) GetDiplomacyUpdate() *DiplomacyUpdate {
	if x != nil {
		if x, ok := x.Update.(*GameStateUpdate_DiplomacyUpdate); ok {
			return x.DiplomacyUpdate
		}
	}
	return nil
}

func (x *GameStateUpdate) GetResourceUpdate() *ResourceUpdate {
	if x != nil {
		if x, ok := x.Update.(*GameStateUpdate_ResourceUpdate); ok {
			return x.ResourceUpdate
		}
	}
	return nil
}

func (x *GameStateUpdate) GetSystemUpdate() *SystemUpdate {
	if x != nil {
		if x, ok := x.Update.(*GameStateUpdate_SystemUpdate); ok {
			return x.SystemUpdate
		}
	}
	return nil
}

func (x *GameStateUpdate) GetColonyUpdate() *ColonyUpdate {
	if x != nil {
		if x, ok := x.Update.(*GameStateUpdate_ColonyUpdate); ok {
			return x.ColonyUpdate
		}
	}
	return nil
}

type isGameStateUpdate_Update interface {
	isGameStateUpdate_Update()
}

type GameStateUpdate_FleetUpdate struct {
	FleetUpdate *FleetUpdate `protobuf:"bytes,1,opt,name=fleet_update,json=fleetUpdate,proto3,oneof"` // Update related to fleet movements
}

type GameStateUpdate_ConstructionUpdate struct {
	ConstructionUpdate *ConstructionUpdate `protobuf:"bytes,2,opt,name=construction_update,json=constructionUpdate,proto3,oneof"` // Update related to construction progress
}

type GameStateUpdate_DiplomacyUpdate struct {
	DiplomacyUpdate *DiplomacyUpdate `protobuf:"bytes,3,opt,name=diplomacy_update,json=diplomacyUpdate,proto3,oneof"` // Update related to diplomatic actions
}

type GameStateUpdate_ResourceUpdate struct {
	ResourceUpdate *ResourceUpdate `protobuf:"bytes,4,opt,name=resource_update,json=resourceUpdate,proto3,oneof"` // Update related to resource changes
}

type GameStateUpdate_SystemUpdate struct {
	SystemUpdate *SystemUpdate `protobuf:"bytes,5,opt,name=system_update,json=systemUpdate,proto3,oneof"` // Update related to star system changes
}

type GameStateUpdate_ColonyUpdate struct {
	ColonyUpdate *ColonyUpdate `protobuf:"bytes,6,opt,name=colony_update,json=colonyUpdate,proto3,oneof"` // Update related to colony status and buildings
}

func (*GameStateUpdate_FleetUpdate) isGameStateUpdate_Update() {}

func (*GameStateUpdate_ConstructionUpdate) isGameStateUpdate_Update() {}

func (*GameStateUpdate_DiplomacyUpdate) isGameStateUpdate_Update() {}

func (*GameStateUpdate_ResourceUpdate) isGameStateUpdate_Update() {}

func (*GameStateUpdate_SystemUpdate) isGameStateUpdate_Update() {}

func (*GameStateUpdate_ColonyUpdate) isGameStateUpdate_Update() {}

type FleetUpdate struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	FleetId             string                 `protobuf:"bytes,1,opt,name=fleet_id,json=fleetId,proto3" json:"fleet_id,omitempty"`                                       // ID of the fleet being updated
	DestinationSystemId string                 `protobuf:"bytes,2,opt,name=destination_system_id,json=destinationSystemId,proto3" json:"destination_system_id,omitempty"` // ID of the destination star system
	ArrivalTime         float64                `protobuf:"fixed64,3,opt,name=arrival_time,json=arrivalTime,proto3" json:"arrival_time,omitempty"`                         // Estimated time of arrival at the destination
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *FleetUpdate) Reset() {
	*x = FleetUpdate{}
	mi := &file_gamestate_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FleetUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FleetUpdate) ProtoMessage() {}

func (x *FleetUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FleetUpdate.ProtoReflect.Descriptor instead.
func (*FleetUpdate) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{1}
}

func (x *FleetUpdate) GetFleetId() string {
	if x != nil {
		return x.FleetId
	}
	return ""
}

func (x *FleetUpdate) GetDestinationSystemId() string {
	if x != nil {
		return x.DestinationSystemId
	}
	return ""
}

func (x *FleetUpdate) GetArrivalTime() float64 {
	if x != nil {
		return x.ArrivalTime
	}
	return 0
}

type ConstructionUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColonyId      string                 `protobuf:"bytes,1,opt,name=colony_id,json=colonyId,proto3" json:"colony_id,omitempty"`             // ID of the colony where construction is happening
	BuildingType  string                 `protobuf:"bytes,2,opt,name=building_type,json=buildingType,proto3" json:"building_type,omitempty"` // Type of building being constructed
	Progress      int32                  `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"`                            // Progress percentage of the construction
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConstructionUpdate) Reset() {
	*x = ConstructionUpdate{}
	mi := &file_gamestate_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConstructionUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConstructionUpdate) ProtoMessage() {}

func (x *ConstructionUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConstructionUpdate.ProtoReflect.Descriptor instead.
func (*ConstructionUpdate) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{2}
}

func (x *ConstructionUpdate) GetColonyId() string {
	if x != nil {
		return x.ColonyId
	}
	return ""
}

func (x *ConstructionUpdate) GetBuildingType() string {
	if x != nil {
		return x.BuildingType
	}
	return ""
}

func (x *ConstructionUpdate) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

type DiplomacyUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EmpireId       string                 `protobuf:"bytes,1,opt,name=empire_id,json=empireId,proto3" json:"empire_id,omitempty"`                     // ID of the empire involved in the diplomacy update
	Action         string                 `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`                                         // Action taken (e.g., alliance, war declaration)
	TargetEmpireId string                 `protobuf:"bytes,3,opt,name=target_empire_id,json=targetEmpireId,proto3" json:"target_empire_id,omitempty"` // ID of the target empire for the action
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DiplomacyUpdate) Reset() {
	*x = DiplomacyUpdate{}
	mi := &file_gamestate_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiplomacyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiplomacyUpdate) ProtoMessage() {}

func (x *DiplomacyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiplomacyUpdate.ProtoReflect.Descriptor instead.
func (*DiplomacyUpdate) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{3}
}

func (x *DiplomacyUpdate) GetEmpireId() string {
	if x != nil {
		return x.EmpireId
	}
	return ""
}

func (x *DiplomacyUpdate) GetAction() string {
	if x != nil {
		return x.Action
	}
	return ""
}

func (x *DiplomacyUpdate) GetTargetEmpireId() string {
	if x != nil {
		return x.TargetEmpireId
	}
	return ""
}

type ResourceUpdate struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	EmpireId       string                 `protobuf:"bytes,1,opt,name=empire_id,json=empireId,proto3" json:"empire_id,omitempty"`                     // ID of the empire whose resources are being updated
	ResourceAmount float64                `protobuf:"fixed64,2,opt,name=resource_amount,json=resourceAmount,proto3" json:"resource_amount,omitempty"` // Amount of resources changed
	ResourceType   string                 `protobuf:"bytes,3,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`         // Type of resource (e.g., metal, crystal)
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ResourceUpdate) Reset() {
	*x = ResourceUpdate{}
	mi := &file_gamestate_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUpdate) ProtoMessage() {}

func (x *ResourceUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUpdate.ProtoReflect.Descriptor instead.
func (*ResourceUpdate) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{4}
}

func (x *ResourceUpdate) GetEmpireId() string {
	if x != nil {
		return x.EmpireId
	}
	return ""
}

func (x *ResourceUpdate) GetResourceAmount() float64 {
	if x != nil {
		return x.ResourceAmount
	}
	return 0
}

func (x *ResourceUpdate) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

type SystemUpdate struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	SystemId         string                 `protobuf:"bytes,1,opt,name=system_id,json=systemId,proto3" json:"system_id,omitempty"`                         // ID of the star system being updated
	OwnerId          string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`                            // ID of the empire that owns the system
	ConnectedSystems []string               `protobuf:"bytes,3,rep,name=connected_systems,json=connectedSystems,proto3" json:"connected_systems,omitempty"` // IDs of neighboring star systems
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SystemUpdate) Reset() {
	*x = SystemUpdate{}
	mi := &file_gamestate_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemUpdate) ProtoMessage() {}

func (x *SystemUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemUpdate.ProtoReflect.Descriptor instead.
func (*SystemUpdate) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{5}
}

func (x *SystemUpdate) GetSystemId() string {
	if x != nil {
		return x.SystemId
	}
	return ""
}

func (x *SystemUpdate) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *SystemUpdate) GetConnectedSystems() []string {
	if x != nil {
		return x.ConnectedSystems
	}
	return nil
}

type ColonyUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ColonyId      string                 `protobuf:"bytes,1,opt,name=colony_id,json=colonyId,proto3" json:"colony_id,omitempty"` // ID of the colony being updated
	OwnerId       string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`    // ID of the empire that owns the colony
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`                     // Status of the colony (e.g., active, under attack)
	Population    int32                  `protobuf:"varint,4,opt,name=population,proto3" json:"population,omitempty"`            // Population of the colony
	Buildings     []string               `protobuf:"bytes,5,rep,name=buildings,proto3" json:"buildings,omitempty"`               // List of buildings in the colony
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ColonyUpdate) Reset() {
	*x = ColonyUpdate{}
	mi := &file_gamestate_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ColonyUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColonyUpdate) ProtoMessage() {}

func (x *ColonyUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_gamestate_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColonyUpdate.ProtoReflect.Descriptor instead.
func (*ColonyUpdate) Descriptor() ([]byte, []int) {
	return file_gamestate_proto_rawDescGZIP(), []int{6}
}

func (x *ColonyUpdate) GetColonyId() string {
	if x != nil {
		return x.ColonyId
	}
	return ""
}

func (x *ColonyUpdate) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *ColonyUpdate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ColonyUpdate) GetPopulation() int32 {
	if x != nil {
		return x.Population
	}
	return 0
}

func (x *ColonyUpdate) GetBuildings() []string {
	if x != nil {
		return x.Buildings
	}
	return nil
}

var File_gamestate_proto protoreflect.FileDescriptor

const file_gamestate_proto_rawDesc = "" +
	"\n" +
	"\x0fgamestate.proto\x12\bmessages\"\xb3\x03\n" +
	"\x0fGameStateUpdate\x12:\n" +
	"\ffleet_update\x18\x01 \x01(\v2\x15.messages.FleetUpdateH\x00R\vfleetUpdate\x12O\n" +
	"\x13construction_update\x18\x02 \x01(\v2\x1c.messages.ConstructionUpdateH\x00R\x12constructionUpdate\x12F\n" +
	"\x10diplomacy_update\x18\x03 \x01(\v2\x19.messages.DiplomacyUpdateH\x00R\x0fdiplomacyUpdate\x12C\n" +
	"\x0fresource_update\x18\x04 \x01(\v2\x18.messages.ResourceUpdateH\x00R\x0eresourceUpdate\x12=\n" +
	"\rsystem_update\x18\x05 \x01(\v2\x16.messages.SystemUpdateH\x00R\fsystemUpdate\x12=\n" +
	"\rcolony_update\x18\x06 \x01(\v2\x16.messages.ColonyUpdateH\x00R\fcolonyUpdateB\b\n" +
	"\x06update\"\x7f\n" +
	"\vFleetUpdate\x12\x19\n" +
	"\bfleet_id\x18\x01 \x01(\tR\afleetId\x122\n" +
	"\x15destination_system_id\x18\x02 \x01(\tR\x13destinationSystemId\x12!\n" +
	"\farrival_time\x18\x03 \x01(\x01R\varrivalTime\"r\n" +
	"\x12ConstructionUpdate\x12\x1b\n" +
	"\tcolony_id\x18\x01 \x01(\tR\bcolonyId\x12#\n" +
	"\rbuilding_type\x18\x02 \x01(\tR\fbuildingType\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x05R\bprogress\"p\n" +
	"\x0fDiplomacyUpdate\x12\x1b\n" +
	"\tempire_id\x18\x01 \x01(\tR\bempireId\x12\x16\n" +
	"\x06action\x18\x02 \x01(\tR\x06action\x12(\n" +
	"\x10target_empire_id\x18\x03 \x01(\tR\x0etargetEmpireId\"{\n" +
	"\x0eResourceUpdate\x12\x1b\n" +
	"\tempire_id\x18\x01 \x01(\tR\bempireId\x12'\n" +
	"\x0fresource_amount\x18\x02 \x01(\x01R\x0eresourceAmount\x12#\n" +
	"\rresource_type\x18\x03 \x01(\tR\fresourceType\"s\n" +
	"\fSystemUpdate\x12\x1b\n" +
	"\tsystem_id\x18\x01 \x01(\tR\bsystemId\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\x12+\n" +
	"\x11connected_systems\x18\x03 \x03(\tR\x10connectedSystems\"\x9c\x01\n" +
	"\fColonyUpdate\x12\x1b\n" +
	"\tcolony_id\x18\x01 \x01(\tR\bcolonyId\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1e\n" +
	"\n" +
	"population\x18\x04 \x01(\x05R\n" +
	"population\x12\x1c\n" +
	"\tbuildings\x18\x05 \x03(\tR\tbuildingsB\x0eZ\fpkg/messagesb\x06proto3"

var (
	file_gamestate_proto_rawDescOnce sync.Once
	file_gamestate_proto_rawDescData []byte
)

func file_gamestate_proto_rawDescGZIP() []byte {
	file_gamestate_proto_rawDescOnce.Do(func() {
		file_gamestate_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gamestate_proto_rawDesc), len(file_gamestate_proto_rawDesc)))
	})
	return file_gamestate_proto_rawDescData
}

var file_gamestate_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_gamestate_proto_goTypes = []any{
	(*GameStateUpdate)(nil),    // 0: messages.GameStateUpdate
	(*FleetUpdate)(nil),        // 1: messages.FleetUpdate
	(*ConstructionUpdate)(nil), // 2: messages.ConstructionUpdate
	(*DiplomacyUpdate)(nil),    // 3: messages.DiplomacyUpdate
	(*ResourceUpdate)(nil),     // 4: messages.ResourceUpdate
	(*SystemUpdate)(nil),       // 5: messages.SystemUpdate
	(*ColonyUpdate)(nil),       // 6: messages.ColonyUpdate
}
var file_gamestate_proto_depIdxs = []int32{
	1, // 0: messages.GameStateUpdate.fleet_update:type_name -> messages.FleetUpdate
	2, // 1: messages.GameStateUpdate.construction_update:type_name -> messages.ConstructionUpdate
	3, // 2: messages.GameStateUpdate.diplomacy_update:type_name -> messages.DiplomacyUpdate
	4, // 3: messages.GameStateUpdate.resource_update:type_name -> messages.ResourceUpdate
	5, // 4: messages.GameStateUpdate.system_update:type_name -> messages.SystemUpdate
	6, // 5: messages.GameStateUpdate.colony_update:type_name -> messages.ColonyUpdate
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_gamestate_proto_init() }
func file_gamestate_proto_init() {
	if File_gamestate_proto != nil {
		return
	}
	file_gamestate_proto_msgTypes[0].OneofWrappers = []any{
		(*GameStateUpdate_FleetUpdate)(nil),
		(*GameStateUpdate_ConstructionUpdate)(nil),
		(*GameStateUpdate_DiplomacyUpdate)(nil),
		(*GameStateUpdate_ResourceUpdate)(nil),
		(*GameStateUpdate_SystemUpdate)(nil),
		(*GameStateUpdate_ColonyUpdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gamestate_proto_rawDesc), len(file_gamestate_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gamestate_proto_goTypes,
		DependencyIndexes: file_gamestate_proto_depIdxs,
		MessageInfos:      file_gamestate_proto_msgTypes,
	}.Build()
	File_gamestate_proto = out.File
	file_gamestate_proto_goTypes = nil
	file_gamestate_proto_depIdxs = nil
}
