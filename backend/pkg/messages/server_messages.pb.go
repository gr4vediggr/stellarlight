// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.31.1
// source: server_messages.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LobbyStateMessage_LobbyStatus int32

const (
	LobbyStateMessage_WAITING  LobbyStateMessage_LobbyStatus = 0
	LobbyStateMessage_STARTING LobbyStateMessage_LobbyStatus = 1
	LobbyStateMessage_IN_GAME  LobbyStateMessage_LobbyStatus = 2
)

// Enum value maps for LobbyStateMessage_LobbyStatus.
var (
	LobbyStateMessage_LobbyStatus_name = map[int32]string{
		0: "WAITING",
		1: "STARTING",
		2: "IN_GAME",
	}
	LobbyStateMessage_LobbyStatus_value = map[string]int32{
		"WAITING":  0,
		"STARTING": 1,
		"IN_GAME":  2,
	}
)

func (x LobbyStateMessage_LobbyStatus) Enum() *LobbyStateMessage_LobbyStatus {
	p := new(LobbyStateMessage_LobbyStatus)
	*p = x
	return p
}

func (x LobbyStateMessage_LobbyStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LobbyStateMessage_LobbyStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_server_messages_proto_enumTypes[0].Descriptor()
}

func (LobbyStateMessage_LobbyStatus) Type() protoreflect.EnumType {
	return &file_server_messages_proto_enumTypes[0]
}

func (x LobbyStateMessage_LobbyStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LobbyStateMessage_LobbyStatus.Descriptor instead.
func (LobbyStateMessage_LobbyStatus) EnumDescriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{2, 0}
}

// Main message wrapper from server
type ServerMessage struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	MessageId string                 `protobuf:"bytes,1,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"` // Optional response ID
	Timestamp int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Message:
	//
	//	*ServerMessage_LobbyMessage
	//	*ServerMessage_GameMessage
	//	*ServerMessage_ChatMessage
	//	*ServerMessage_SystemMessage
	//	*ServerMessage_ErrorMessage
	Message       isServerMessage_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_server_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{0}
}

func (x *ServerMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ServerMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ServerMessage) GetMessage() isServerMessage_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *ServerMessage) GetLobbyMessage() *LobbyMessage {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_LobbyMessage); ok {
			return x.LobbyMessage
		}
	}
	return nil
}

func (x *ServerMessage) GetGameMessage() *GameMessage {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_GameMessage); ok {
			return x.GameMessage
		}
	}
	return nil
}

func (x *ServerMessage) GetChatMessage() *ChatMessage {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_ChatMessage); ok {
			return x.ChatMessage
		}
	}
	return nil
}

func (x *ServerMessage) GetSystemMessage() *SystemMessage {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_SystemMessage); ok {
			return x.SystemMessage
		}
	}
	return nil
}

func (x *ServerMessage) GetErrorMessage() *ErrorMessage {
	if x != nil {
		if x, ok := x.Message.(*ServerMessage_ErrorMessage); ok {
			return x.ErrorMessage
		}
	}
	return nil
}

type isServerMessage_Message interface {
	isServerMessage_Message()
}

type ServerMessage_LobbyMessage struct {
	// Lobby Messages
	LobbyMessage *LobbyMessage `protobuf:"bytes,10,opt,name=lobby_message,json=lobbyMessage,proto3,oneof"`
}

type ServerMessage_GameMessage struct {
	// Game Messages
	GameMessage *GameMessage `protobuf:"bytes,20,opt,name=game_message,json=gameMessage,proto3,oneof"`
}

type ServerMessage_ChatMessage struct {
	// Chat Messages
	ChatMessage *ChatMessage `protobuf:"bytes,30,opt,name=chat_message,json=chatMessage,proto3,oneof"`
}

type ServerMessage_SystemMessage struct {
	// System Messages
	SystemMessage *SystemMessage `protobuf:"bytes,40,opt,name=system_message,json=systemMessage,proto3,oneof"`
}

type ServerMessage_ErrorMessage struct {
	// Error Messages
	ErrorMessage *ErrorMessage `protobuf:"bytes,50,opt,name=error_message,json=errorMessage,proto3,oneof"`
}

func (*ServerMessage_LobbyMessage) isServerMessage_Message() {}

func (*ServerMessage_GameMessage) isServerMessage_Message() {}

func (*ServerMessage_ChatMessage) isServerMessage_Message() {}

func (*ServerMessage_SystemMessage) isServerMessage_Message() {}

func (*ServerMessage_ErrorMessage) isServerMessage_Message() {}

type LobbyMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*LobbyMessage_LobbyState
	//	*LobbyMessage_PlayerJoined
	//	*LobbyMessage_PlayerLeft
	//	*LobbyMessage_PlayerUpdated
	//	*LobbyMessage_SettingsUpdated
	//	*LobbyMessage_GameStarting
	//	*LobbyMessage_GameLoading
	Content       isLobbyMessage_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LobbyMessage) Reset() {
	*x = LobbyMessage{}
	mi := &file_server_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LobbyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyMessage) ProtoMessage() {}

func (x *LobbyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyMessage.ProtoReflect.Descriptor instead.
func (*LobbyMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{1}
}

func (x *LobbyMessage) GetContent() isLobbyMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *LobbyMessage) GetLobbyState() *LobbyStateMessage {
	if x != nil {
		if x, ok := x.Content.(*LobbyMessage_LobbyState); ok {
			return x.LobbyState
		}
	}
	return nil
}

func (x *LobbyMessage) GetPlayerJoined() *PlayerJoinedMessage {
	if x != nil {
		if x, ok := x.Content.(*LobbyMessage_PlayerJoined); ok {
			return x.PlayerJoined
		}
	}
	return nil
}

func (x *LobbyMessage) GetPlayerLeft() *PlayerLeftMessage {
	if x != nil {
		if x, ok := x.Content.(*LobbyMessage_PlayerLeft); ok {
			return x.PlayerLeft
		}
	}
	return nil
}

func (x *LobbyMessage) GetPlayerUpdated() *PlayerUpdatedMessage {
	if x != nil {
		if x, ok := x.Content.(*LobbyMessage_PlayerUpdated); ok {
			return x.PlayerUpdated
		}
	}
	return nil
}

func (x *LobbyMessage) GetSettingsUpdated() *LobbySettingsUpdatedMessage {
	if x != nil {
		if x, ok := x.Content.(*LobbyMessage_SettingsUpdated); ok {
			return x.SettingsUpdated
		}
	}
	return nil
}

func (x *LobbyMessage) GetGameStarting() *GameStartingMessage {
	if x != nil {
		if x, ok := x.Content.(*LobbyMessage_GameStarting); ok {
			return x.GameStarting
		}
	}
	return nil
}

func (x *LobbyMessage) GetGameLoading() *GameLoadingMessage {
	if x != nil {
		if x, ok := x.Content.(*LobbyMessage_GameLoading); ok {
			return x.GameLoading
		}
	}
	return nil
}

type isLobbyMessage_Content interface {
	isLobbyMessage_Content()
}

type LobbyMessage_LobbyState struct {
	LobbyState *LobbyStateMessage `protobuf:"bytes,1,opt,name=lobby_state,json=lobbyState,proto3,oneof"`
}

type LobbyMessage_PlayerJoined struct {
	PlayerJoined *PlayerJoinedMessage `protobuf:"bytes,2,opt,name=player_joined,json=playerJoined,proto3,oneof"`
}

type LobbyMessage_PlayerLeft struct {
	PlayerLeft *PlayerLeftMessage `protobuf:"bytes,3,opt,name=player_left,json=playerLeft,proto3,oneof"`
}

type LobbyMessage_PlayerUpdated struct {
	PlayerUpdated *PlayerUpdatedMessage `protobuf:"bytes,4,opt,name=player_updated,json=playerUpdated,proto3,oneof"`
}

type LobbyMessage_SettingsUpdated struct {
	SettingsUpdated *LobbySettingsUpdatedMessage `protobuf:"bytes,5,opt,name=settings_updated,json=settingsUpdated,proto3,oneof"`
}

type LobbyMessage_GameStarting struct {
	GameStarting *GameStartingMessage `protobuf:"bytes,6,opt,name=game_starting,json=gameStarting,proto3,oneof"`
}

type LobbyMessage_GameLoading struct {
	GameLoading *GameLoadingMessage `protobuf:"bytes,7,opt,name=game_loading,json=gameLoading,proto3,oneof"`
}

func (*LobbyMessage_LobbyState) isLobbyMessage_Content() {}

func (*LobbyMessage_PlayerJoined) isLobbyMessage_Content() {}

func (*LobbyMessage_PlayerLeft) isLobbyMessage_Content() {}

func (*LobbyMessage_PlayerUpdated) isLobbyMessage_Content() {}

func (*LobbyMessage_SettingsUpdated) isLobbyMessage_Content() {}

func (*LobbyMessage_GameStarting) isLobbyMessage_Content() {}

func (*LobbyMessage_GameLoading) isLobbyMessage_Content() {}

// Complete lobby state - sent when player joins or significant changes occur
type LobbyStateMessage struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	SessionId     string                        `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	InviteCode    string                        `protobuf:"bytes,2,opt,name=invite_code,json=inviteCode,proto3" json:"invite_code,omitempty"`
	HostPlayerId  string                        `protobuf:"bytes,3,opt,name=host_player_id,json=hostPlayerId,proto3" json:"host_player_id,omitempty"`
	Status        LobbyStateMessage_LobbyStatus `protobuf:"varint,4,opt,name=status,proto3,enum=messages.LobbyStateMessage_LobbyStatus" json:"status,omitempty"`
	Players       []*LobbyPlayer                `protobuf:"bytes,5,rep,name=players,proto3" json:"players,omitempty"`
	Settings      *GalaxyGenerateSettings       `protobuf:"bytes,6,opt,name=settings,proto3" json:"settings,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LobbyStateMessage) Reset() {
	*x = LobbyStateMessage{}
	mi := &file_server_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LobbyStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyStateMessage) ProtoMessage() {}

func (x *LobbyStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyStateMessage.ProtoReflect.Descriptor instead.
func (*LobbyStateMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{2}
}

func (x *LobbyStateMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LobbyStateMessage) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *LobbyStateMessage) GetHostPlayerId() string {
	if x != nil {
		return x.HostPlayerId
	}
	return ""
}

func (x *LobbyStateMessage) GetStatus() LobbyStateMessage_LobbyStatus {
	if x != nil {
		return x.Status
	}
	return LobbyStateMessage_WAITING
}

func (x *LobbyStateMessage) GetPlayers() []*LobbyPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *LobbyStateMessage) GetSettings() *GalaxyGenerateSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

type LobbyPlayer struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	Color         string                 `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	IsReady       bool                   `protobuf:"varint,4,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
	IsHost        bool                   `protobuf:"varint,5,opt,name=is_host,json=isHost,proto3" json:"is_host,omitempty"`
	IsConnected   bool                   `protobuf:"varint,6,opt,name=is_connected,json=isConnected,proto3" json:"is_connected,omitempty"`
	JoinedAt      int64                  `protobuf:"varint,7,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LobbyPlayer) Reset() {
	*x = LobbyPlayer{}
	mi := &file_server_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LobbyPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyPlayer) ProtoMessage() {}

func (x *LobbyPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyPlayer.ProtoReflect.Descriptor instead.
func (*LobbyPlayer) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{3}
}

func (x *LobbyPlayer) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *LobbyPlayer) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *LobbyPlayer) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *LobbyPlayer) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

func (x *LobbyPlayer) GetIsHost() bool {
	if x != nil {
		return x.IsHost
	}
	return false
}

func (x *LobbyPlayer) GetIsConnected() bool {
	if x != nil {
		return x.IsConnected
	}
	return false
}

func (x *LobbyPlayer) GetJoinedAt() int64 {
	if x != nil {
		return x.JoinedAt
	}
	return 0
}

// Individual update messages for efficiency
type PlayerJoinedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *LobbyPlayer           `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerJoinedMessage) Reset() {
	*x = PlayerJoinedMessage{}
	mi := &file_server_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerJoinedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerJoinedMessage) ProtoMessage() {}

func (x *PlayerJoinedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerJoinedMessage.ProtoReflect.Descriptor instead.
func (*PlayerJoinedMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{4}
}

func (x *PlayerJoinedMessage) GetPlayer() *LobbyPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

type PlayerLeftMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PlayerId      string                 `protobuf:"bytes,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	DisplayName   string                 `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerLeftMessage) Reset() {
	*x = PlayerLeftMessage{}
	mi := &file_server_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerLeftMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerLeftMessage) ProtoMessage() {}

func (x *PlayerLeftMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerLeftMessage.ProtoReflect.Descriptor instead.
func (*PlayerLeftMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{5}
}

func (x *PlayerLeftMessage) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *PlayerLeftMessage) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

type PlayerUpdatedMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Player        *LobbyPlayer           `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PlayerUpdatedMessage) Reset() {
	*x = PlayerUpdatedMessage{}
	mi := &file_server_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerUpdatedMessage) ProtoMessage() {}

func (x *PlayerUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerUpdatedMessage.ProtoReflect.Descriptor instead.
func (*PlayerUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{6}
}

func (x *PlayerUpdatedMessage) GetPlayer() *LobbyPlayer {
	if x != nil {
		return x.Player
	}
	return nil
}

type LobbySettingsUpdatedMessage struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	Settings          *GalaxyGenerateSettings `protobuf:"bytes,1,opt,name=settings,proto3" json:"settings,omitempty"`
	UpdatedByPlayerId string                  `protobuf:"bytes,2,opt,name=updated_by_player_id,json=updatedByPlayerId,proto3" json:"updated_by_player_id,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *LobbySettingsUpdatedMessage) Reset() {
	*x = LobbySettingsUpdatedMessage{}
	mi := &file_server_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LobbySettingsUpdatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbySettingsUpdatedMessage) ProtoMessage() {}

func (x *LobbySettingsUpdatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbySettingsUpdatedMessage.ProtoReflect.Descriptor instead.
func (*LobbySettingsUpdatedMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{7}
}

func (x *LobbySettingsUpdatedMessage) GetSettings() *GalaxyGenerateSettings {
	if x != nil {
		return x.Settings
	}
	return nil
}

func (x *LobbySettingsUpdatedMessage) GetUpdatedByPlayerId() string {
	if x != nil {
		return x.UpdatedByPlayerId
	}
	return ""
}

type GameStartingMessage struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	FinalSettings *GalaxyGenerateSettings `protobuf:"bytes,1,opt,name=final_settings,json=finalSettings,proto3" json:"final_settings,omitempty"`
	StartTime     int64                   `protobuf:"varint,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStartingMessage) Reset() {
	*x = GameStartingMessage{}
	mi := &file_server_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStartingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStartingMessage) ProtoMessage() {}

func (x *GameStartingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStartingMessage.ProtoReflect.Descriptor instead.
func (*GameStartingMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{8}
}

func (x *GameStartingMessage) GetFinalSettings() *GalaxyGenerateSettings {
	if x != nil {
		return x.FinalSettings
	}
	return nil
}

func (x *GameStartingMessage) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

type GameLoadingMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Progress      float32                `protobuf:"fixed32,1,opt,name=progress,proto3" json:"progress,omitempty"`                     // 0.0 to 1.0
	StatusText    string                 `protobuf:"bytes,2,opt,name=status_text,json=statusText,proto3" json:"status_text,omitempty"` // "Generating galaxy...", "Creating empires...", etc.
	Phase         string                 `protobuf:"bytes,3,opt,name=phase,proto3" json:"phase,omitempty"`                             // "GALAXY_GENERATION", "EMPIRE_SETUP", etc.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameLoadingMessage) Reset() {
	*x = GameLoadingMessage{}
	mi := &file_server_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameLoadingMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameLoadingMessage) ProtoMessage() {}

func (x *GameLoadingMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameLoadingMessage.ProtoReflect.Descriptor instead.
func (*GameLoadingMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{9}
}

func (x *GameLoadingMessage) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *GameLoadingMessage) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *GameLoadingMessage) GetPhase() string {
	if x != nil {
		return x.Phase
	}
	return ""
}

type GameMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*GameMessage_GameState
	//	*GameMessage_GameEvent
	//	*GameMessage_TurnUpdate
	Content       isGameMessage_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameMessage) Reset() {
	*x = GameMessage{}
	mi := &file_server_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameMessage) ProtoMessage() {}

func (x *GameMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameMessage.ProtoReflect.Descriptor instead.
func (*GameMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{10}
}

func (x *GameMessage) GetContent() isGameMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *GameMessage) GetGameState() *GameStateMessage {
	if x != nil {
		if x, ok := x.Content.(*GameMessage_GameState); ok {
			return x.GameState
		}
	}
	return nil
}

func (x *GameMessage) GetGameEvent() *GameEventMessage {
	if x != nil {
		if x, ok := x.Content.(*GameMessage_GameEvent); ok {
			return x.GameEvent
		}
	}
	return nil
}

func (x *GameMessage) GetTurnUpdate() *TurnUpdateMessage {
	if x != nil {
		if x, ok := x.Content.(*GameMessage_TurnUpdate); ok {
			return x.TurnUpdate
		}
	}
	return nil
}

type isGameMessage_Content interface {
	isGameMessage_Content()
}

type GameMessage_GameState struct {
	GameState *GameStateMessage `protobuf:"bytes,1,opt,name=game_state,json=gameState,proto3,oneof"`
}

type GameMessage_GameEvent struct {
	GameEvent *GameEventMessage `protobuf:"bytes,2,opt,name=game_event,json=gameEvent,proto3,oneof"`
}

type GameMessage_TurnUpdate struct {
	TurnUpdate *TurnUpdateMessage `protobuf:"bytes,3,opt,name=turn_update,json=turnUpdate,proto3,oneof"`
}

func (*GameMessage_GameState) isGameMessage_Content() {}

func (*GameMessage_GameEvent) isGameMessage_Content() {}

func (*GameMessage_TurnUpdate) isGameMessage_Content() {}

type GameStateMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Full or partial game state
	StateData     string `protobuf:"bytes,1,opt,name=state_data,json=stateData,proto3" json:"state_data,omitempty"` // JSON or binary game state
	TurnNumber    int64  `protobuf:"varint,2,opt,name=turn_number,json=turnNumber,proto3" json:"turn_number,omitempty"`
	GameTime      int64  `protobuf:"varint,3,opt,name=game_time,json=gameTime,proto3" json:"game_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GameStateMessage) Reset() {
	*x = GameStateMessage{}
	mi := &file_server_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateMessage) ProtoMessage() {}

func (x *GameStateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateMessage.ProtoReflect.Descriptor instead.
func (*GameStateMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{11}
}

func (x *GameStateMessage) GetStateData() string {
	if x != nil {
		return x.StateData
	}
	return ""
}

func (x *GameStateMessage) GetTurnNumber() int64 {
	if x != nil {
		return x.TurnNumber
	}
	return 0
}

func (x *GameStateMessage) GetGameTime() int64 {
	if x != nil {
		return x.GameTime
	}
	return 0
}

type GameEventMessage struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	EventType       string                 `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"` // "FLEET_ARRIVED", "BATTLE_OCCURRED", etc.
	EventData       string                 `protobuf:"bytes,2,opt,name=event_data,json=eventData,proto3" json:"event_data,omitempty"` // JSON event data
	AffectedPlayers []string               `protobuf:"bytes,3,rep,name=affected_players,json=affectedPlayers,proto3" json:"affected_players,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GameEventMessage) Reset() {
	*x = GameEventMessage{}
	mi := &file_server_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameEventMessage) ProtoMessage() {}

func (x *GameEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameEventMessage.ProtoReflect.Descriptor instead.
func (*GameEventMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{12}
}

func (x *GameEventMessage) GetEventType() string {
	if x != nil {
		return x.EventType
	}
	return ""
}

func (x *GameEventMessage) GetEventData() string {
	if x != nil {
		return x.EventData
	}
	return ""
}

func (x *GameEventMessage) GetAffectedPlayers() []string {
	if x != nil {
		return x.AffectedPlayers
	}
	return nil
}

type TurnUpdateMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TurnNumber    int64                  `protobuf:"varint,1,opt,name=turn_number,json=turnNumber,proto3" json:"turn_number,omitempty"`
	TurnDeadline  int64                  `protobuf:"varint,2,opt,name=turn_deadline,json=turnDeadline,proto3" json:"turn_deadline,omitempty"`
	IsPaused      bool                   `protobuf:"varint,3,opt,name=is_paused,json=isPaused,proto3" json:"is_paused,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TurnUpdateMessage) Reset() {
	*x = TurnUpdateMessage{}
	mi := &file_server_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TurnUpdateMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TurnUpdateMessage) ProtoMessage() {}

func (x *TurnUpdateMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TurnUpdateMessage.ProtoReflect.Descriptor instead.
func (*TurnUpdateMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{13}
}

func (x *TurnUpdateMessage) GetTurnNumber() int64 {
	if x != nil {
		return x.TurnNumber
	}
	return 0
}

func (x *TurnUpdateMessage) GetTurnDeadline() int64 {
	if x != nil {
		return x.TurnDeadline
	}
	return 0
}

func (x *TurnUpdateMessage) GetIsPaused() bool {
	if x != nil {
		return x.IsPaused
	}
	return false
}

type ChatMessage struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	SenderId          string                 `protobuf:"bytes,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	SenderDisplayName string                 `protobuf:"bytes,2,opt,name=sender_display_name,json=senderDisplayName,proto3" json:"sender_display_name,omitempty"`
	Timestamp         int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Scope:
	//
	//	*ChatMessage_Global
	//	*ChatMessage_Private
	//	*ChatMessage_Lobby
	//	*ChatMessage_System
	Scope         isChatMessage_Scope `protobuf_oneof:"scope"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	mi := &file_server_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{14}
}

func (x *ChatMessage) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *ChatMessage) GetSenderDisplayName() string {
	if x != nil {
		return x.SenderDisplayName
	}
	return ""
}

func (x *ChatMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ChatMessage) GetScope() isChatMessage_Scope {
	if x != nil {
		return x.Scope
	}
	return nil
}

func (x *ChatMessage) GetGlobal() *GlobalChatMessage {
	if x != nil {
		if x, ok := x.Scope.(*ChatMessage_Global); ok {
			return x.Global
		}
	}
	return nil
}

func (x *ChatMessage) GetPrivate() *PrivateChatMessage {
	if x != nil {
		if x, ok := x.Scope.(*ChatMessage_Private); ok {
			return x.Private
		}
	}
	return nil
}

func (x *ChatMessage) GetLobby() *LobbyChatMessage {
	if x != nil {
		if x, ok := x.Scope.(*ChatMessage_Lobby); ok {
			return x.Lobby
		}
	}
	return nil
}

func (x *ChatMessage) GetSystem() *SystemChatMessage {
	if x != nil {
		if x, ok := x.Scope.(*ChatMessage_System); ok {
			return x.System
		}
	}
	return nil
}

type isChatMessage_Scope interface {
	isChatMessage_Scope()
}

type ChatMessage_Global struct {
	Global *GlobalChatMessage `protobuf:"bytes,10,opt,name=global,proto3,oneof"`
}

type ChatMessage_Private struct {
	Private *PrivateChatMessage `protobuf:"bytes,11,opt,name=private,proto3,oneof"`
}

type ChatMessage_Lobby struct {
	Lobby *LobbyChatMessage `protobuf:"bytes,12,opt,name=lobby,proto3,oneof"`
}

type ChatMessage_System struct {
	System *SystemChatMessage `protobuf:"bytes,13,opt,name=system,proto3,oneof"`
}

func (*ChatMessage_Global) isChatMessage_Scope() {}

func (*ChatMessage_Private) isChatMessage_Scope() {}

func (*ChatMessage_Lobby) isChatMessage_Scope() {}

func (*ChatMessage_System) isChatMessage_Scope() {}

type GlobalChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GlobalChatMessage) Reset() {
	*x = GlobalChatMessage{}
	mi := &file_server_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GlobalChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GlobalChatMessage) ProtoMessage() {}

func (x *GlobalChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GlobalChatMessage.ProtoReflect.Descriptor instead.
func (*GlobalChatMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{15}
}

func (x *GlobalChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PrivateChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RecipientId   string                 `protobuf:"bytes,1,opt,name=recipient_id,json=recipientId,proto3" json:"recipient_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrivateChatMessage) Reset() {
	*x = PrivateChatMessage{}
	mi := &file_server_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrivateChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrivateChatMessage) ProtoMessage() {}

func (x *PrivateChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrivateChatMessage.ProtoReflect.Descriptor instead.
func (*PrivateChatMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{16}
}

func (x *PrivateChatMessage) GetRecipientId() string {
	if x != nil {
		return x.RecipientId
	}
	return ""
}

func (x *PrivateChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LobbyChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LobbyChatMessage) Reset() {
	*x = LobbyChatMessage{}
	mi := &file_server_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LobbyChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyChatMessage) ProtoMessage() {}

func (x *LobbyChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyChatMessage.ProtoReflect.Descriptor instead.
func (*LobbyChatMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{17}
}

func (x *LobbyChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SystemChatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	MessageType   string                 `protobuf:"bytes,2,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // "INFO", "WARNING", "ERROR"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemChatMessage) Reset() {
	*x = SystemChatMessage{}
	mi := &file_server_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemChatMessage) ProtoMessage() {}

func (x *SystemChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemChatMessage.ProtoReflect.Descriptor instead.
func (*SystemChatMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{18}
}

func (x *SystemChatMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SystemChatMessage) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

type SystemMessage struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Content:
	//
	//	*SystemMessage_Connection
	//	*SystemMessage_Auth
	//	*SystemMessage_ServerStatus
	Content       isSystemMessage_Content `protobuf_oneof:"content"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SystemMessage) Reset() {
	*x = SystemMessage{}
	mi := &file_server_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SystemMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemMessage) ProtoMessage() {}

func (x *SystemMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemMessage.ProtoReflect.Descriptor instead.
func (*SystemMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{19}
}

func (x *SystemMessage) GetContent() isSystemMessage_Content {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *SystemMessage) GetConnection() *ConnectionMessage {
	if x != nil {
		if x, ok := x.Content.(*SystemMessage_Connection); ok {
			return x.Connection
		}
	}
	return nil
}

func (x *SystemMessage) GetAuth() *AuthMessage {
	if x != nil {
		if x, ok := x.Content.(*SystemMessage_Auth); ok {
			return x.Auth
		}
	}
	return nil
}

func (x *SystemMessage) GetServerStatus() *ServerStatusMessage {
	if x != nil {
		if x, ok := x.Content.(*SystemMessage_ServerStatus); ok {
			return x.ServerStatus
		}
	}
	return nil
}

type isSystemMessage_Content interface {
	isSystemMessage_Content()
}

type SystemMessage_Connection struct {
	Connection *ConnectionMessage `protobuf:"bytes,1,opt,name=connection,proto3,oneof"`
}

type SystemMessage_Auth struct {
	Auth *AuthMessage `protobuf:"bytes,2,opt,name=auth,proto3,oneof"`
}

type SystemMessage_ServerStatus struct {
	ServerStatus *ServerStatusMessage `protobuf:"bytes,3,opt,name=server_status,json=serverStatus,proto3,oneof"`
}

func (*SystemMessage_Connection) isSystemMessage_Content() {}

func (*SystemMessage_Auth) isSystemMessage_Content() {}

func (*SystemMessage_ServerStatus) isSystemMessage_Content() {}

type ConnectionMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "CONNECTED", "RECONNECTING", "DISCONNECTED"
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionMessage) Reset() {
	*x = ConnectionMessage{}
	mi := &file_server_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionMessage) ProtoMessage() {}

func (x *ConnectionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionMessage.ProtoReflect.Descriptor instead.
func (*ConnectionMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{20}
}

func (x *ConnectionMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ConnectionMessage) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type AuthMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "AUTHENTICATED", "TOKEN_EXPIRED", "INVALID_TOKEN"
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthMessage) Reset() {
	*x = AuthMessage{}
	mi := &file_server_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthMessage) ProtoMessage() {}

func (x *AuthMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthMessage.ProtoReflect.Descriptor instead.
func (*AuthMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{21}
}

func (x *AuthMessage) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AuthMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ServerStatusMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsMaintenance bool                   `protobuf:"varint,1,opt,name=is_maintenance,json=isMaintenance,proto3" json:"is_maintenance,omitempty"`
	Version       string                 `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	PlayerCount   int32                  `protobuf:"varint,3,opt,name=player_count,json=playerCount,proto3" json:"player_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerStatusMessage) Reset() {
	*x = ServerStatusMessage{}
	mi := &file_server_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerStatusMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerStatusMessage) ProtoMessage() {}

func (x *ServerStatusMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerStatusMessage.ProtoReflect.Descriptor instead.
func (*ServerStatusMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{22}
}

func (x *ServerStatusMessage) GetIsMaintenance() bool {
	if x != nil {
		return x.IsMaintenance
	}
	return false
}

func (x *ServerStatusMessage) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ServerStatusMessage) GetPlayerCount() int32 {
	if x != nil {
		return x.PlayerCount
	}
	return 0
}

type ErrorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     string                 `protobuf:"bytes,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"` // "LOBBY_FULL", "INVALID_COMMAND", etc.
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Context       string                 `protobuf:"bytes,3,opt,name=context,proto3" json:"context,omitempty"` // Additional context for debugging
	Details       []string               `protobuf:"bytes,4,rep,name=details,proto3" json:"details,omitempty"` // Detailed error information
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorMessage) Reset() {
	*x = ErrorMessage{}
	mi := &file_server_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorMessage) ProtoMessage() {}

func (x *ErrorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_server_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorMessage.ProtoReflect.Descriptor instead.
func (*ErrorMessage) Descriptor() ([]byte, []int) {
	return file_server_messages_proto_rawDescGZIP(), []int{23}
}

func (x *ErrorMessage) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *ErrorMessage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ErrorMessage) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *ErrorMessage) GetDetails() []string {
	if x != nil {
		return x.Details
	}
	return nil
}

var File_server_messages_proto protoreflect.FileDescriptor

const file_server_messages_proto_rawDesc = "" +
	"\n" +
	"\x15server_messages.proto\x12\bmessages\x1a\x15client_commands.proto\"\x8f\x03\n" +
	"\rServerMessage\x12\x1d\n" +
	"\n" +
	"message_id\x18\x01 \x01(\tR\tmessageId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12=\n" +
	"\rlobby_message\x18\n" +
	" \x01(\v2\x16.messages.LobbyMessageH\x00R\flobbyMessage\x12:\n" +
	"\fgame_message\x18\x14 \x01(\v2\x15.messages.GameMessageH\x00R\vgameMessage\x12:\n" +
	"\fchat_message\x18\x1e \x01(\v2\x15.messages.ChatMessageH\x00R\vchatMessage\x12@\n" +
	"\x0esystem_message\x18( \x01(\v2\x17.messages.SystemMessageH\x00R\rsystemMessage\x12=\n" +
	"\rerror_message\x182 \x01(\v2\x16.messages.ErrorMessageH\x00R\ferrorMessageB\t\n" +
	"\amessage\"\x85\x04\n" +
	"\fLobbyMessage\x12>\n" +
	"\vlobby_state\x18\x01 \x01(\v2\x1b.messages.LobbyStateMessageH\x00R\n" +
	"lobbyState\x12D\n" +
	"\rplayer_joined\x18\x02 \x01(\v2\x1d.messages.PlayerJoinedMessageH\x00R\fplayerJoined\x12>\n" +
	"\vplayer_left\x18\x03 \x01(\v2\x1b.messages.PlayerLeftMessageH\x00R\n" +
	"playerLeft\x12G\n" +
	"\x0eplayer_updated\x18\x04 \x01(\v2\x1e.messages.PlayerUpdatedMessageH\x00R\rplayerUpdated\x12R\n" +
	"\x10settings_updated\x18\x05 \x01(\v2%.messages.LobbySettingsUpdatedMessageH\x00R\x0fsettingsUpdated\x12D\n" +
	"\rgame_starting\x18\x06 \x01(\v2\x1d.messages.GameStartingMessageH\x00R\fgameStarting\x12A\n" +
	"\fgame_loading\x18\a \x01(\v2\x1c.messages.GameLoadingMessageH\x00R\vgameLoadingB\t\n" +
	"\acontent\"\xe0\x02\n" +
	"\x11LobbyStateMessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1f\n" +
	"\vinvite_code\x18\x02 \x01(\tR\n" +
	"inviteCode\x12$\n" +
	"\x0ehost_player_id\x18\x03 \x01(\tR\fhostPlayerId\x12?\n" +
	"\x06status\x18\x04 \x01(\x0e2'.messages.LobbyStateMessage.LobbyStatusR\x06status\x12/\n" +
	"\aplayers\x18\x05 \x03(\v2\x15.messages.LobbyPlayerR\aplayers\x12<\n" +
	"\bsettings\x18\x06 \x01(\v2 .messages.GalaxyGenerateSettingsR\bsettings\"5\n" +
	"\vLobbyStatus\x12\v\n" +
	"\aWAITING\x10\x00\x12\f\n" +
	"\bSTARTING\x10\x01\x12\v\n" +
	"\aIN_GAME\x10\x02\"\xd7\x01\n" +
	"\vLobbyPlayer\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\x12\x14\n" +
	"\x05color\x18\x03 \x01(\tR\x05color\x12\x19\n" +
	"\bis_ready\x18\x04 \x01(\bR\aisReady\x12\x17\n" +
	"\ais_host\x18\x05 \x01(\bR\x06isHost\x12!\n" +
	"\fis_connected\x18\x06 \x01(\bR\visConnected\x12\x1b\n" +
	"\tjoined_at\x18\a \x01(\x03R\bjoinedAt\"D\n" +
	"\x13PlayerJoinedMessage\x12-\n" +
	"\x06player\x18\x01 \x01(\v2\x15.messages.LobbyPlayerR\x06player\"S\n" +
	"\x11PlayerLeftMessage\x12\x1b\n" +
	"\tplayer_id\x18\x01 \x01(\tR\bplayerId\x12!\n" +
	"\fdisplay_name\x18\x02 \x01(\tR\vdisplayName\"E\n" +
	"\x14PlayerUpdatedMessage\x12-\n" +
	"\x06player\x18\x01 \x01(\v2\x15.messages.LobbyPlayerR\x06player\"\x8c\x01\n" +
	"\x1bLobbySettingsUpdatedMessage\x12<\n" +
	"\bsettings\x18\x01 \x01(\v2 .messages.GalaxyGenerateSettingsR\bsettings\x12/\n" +
	"\x14updated_by_player_id\x18\x02 \x01(\tR\x11updatedByPlayerId\"}\n" +
	"\x13GameStartingMessage\x12G\n" +
	"\x0efinal_settings\x18\x01 \x01(\v2 .messages.GalaxyGenerateSettingsR\rfinalSettings\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\x03R\tstartTime\"g\n" +
	"\x12GameLoadingMessage\x12\x1a\n" +
	"\bprogress\x18\x01 \x01(\x02R\bprogress\x12\x1f\n" +
	"\vstatus_text\x18\x02 \x01(\tR\n" +
	"statusText\x12\x14\n" +
	"\x05phase\x18\x03 \x01(\tR\x05phase\"\xd2\x01\n" +
	"\vGameMessage\x12;\n" +
	"\n" +
	"game_state\x18\x01 \x01(\v2\x1a.messages.GameStateMessageH\x00R\tgameState\x12;\n" +
	"\n" +
	"game_event\x18\x02 \x01(\v2\x1a.messages.GameEventMessageH\x00R\tgameEvent\x12>\n" +
	"\vturn_update\x18\x03 \x01(\v2\x1b.messages.TurnUpdateMessageH\x00R\n" +
	"turnUpdateB\t\n" +
	"\acontent\"o\n" +
	"\x10GameStateMessage\x12\x1d\n" +
	"\n" +
	"state_data\x18\x01 \x01(\tR\tstateData\x12\x1f\n" +
	"\vturn_number\x18\x02 \x01(\x03R\n" +
	"turnNumber\x12\x1b\n" +
	"\tgame_time\x18\x03 \x01(\x03R\bgameTime\"{\n" +
	"\x10GameEventMessage\x12\x1d\n" +
	"\n" +
	"event_type\x18\x01 \x01(\tR\teventType\x12\x1d\n" +
	"\n" +
	"event_data\x18\x02 \x01(\tR\teventData\x12)\n" +
	"\x10affected_players\x18\x03 \x03(\tR\x0faffectedPlayers\"v\n" +
	"\x11TurnUpdateMessage\x12\x1f\n" +
	"\vturn_number\x18\x01 \x01(\x03R\n" +
	"turnNumber\x12#\n" +
	"\rturn_deadline\x18\x02 \x01(\x03R\fturnDeadline\x12\x1b\n" +
	"\tis_paused\x18\x03 \x01(\bR\bisPaused\"\xdd\x02\n" +
	"\vChatMessage\x12\x1b\n" +
	"\tsender_id\x18\x01 \x01(\tR\bsenderId\x12.\n" +
	"\x13sender_display_name\x18\x02 \x01(\tR\x11senderDisplayName\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x125\n" +
	"\x06global\x18\n" +
	" \x01(\v2\x1b.messages.GlobalChatMessageH\x00R\x06global\x128\n" +
	"\aprivate\x18\v \x01(\v2\x1c.messages.PrivateChatMessageH\x00R\aprivate\x122\n" +
	"\x05lobby\x18\f \x01(\v2\x1a.messages.LobbyChatMessageH\x00R\x05lobby\x125\n" +
	"\x06system\x18\r \x01(\v2\x1b.messages.SystemChatMessageH\x00R\x06systemB\a\n" +
	"\x05scope\"-\n" +
	"\x11GlobalChatMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"Q\n" +
	"\x12PrivateChatMessage\x12!\n" +
	"\frecipient_id\x18\x01 \x01(\tR\vrecipientId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\",\n" +
	"\x10LobbyChatMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"P\n" +
	"\x11SystemChatMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12!\n" +
	"\fmessage_type\x18\x02 \x01(\tR\vmessageType\"\xcc\x01\n" +
	"\rSystemMessage\x12=\n" +
	"\n" +
	"connection\x18\x01 \x01(\v2\x1b.messages.ConnectionMessageH\x00R\n" +
	"connection\x12+\n" +
	"\x04auth\x18\x02 \x01(\v2\x15.messages.AuthMessageH\x00R\x04auth\x12D\n" +
	"\rserver_status\x18\x03 \x01(\v2\x1d.messages.ServerStatusMessageH\x00R\fserverStatusB\t\n" +
	"\acontent\"C\n" +
	"\x11ConnectionMessage\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"?\n" +
	"\vAuthMessage\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"y\n" +
	"\x13ServerStatusMessage\x12%\n" +
	"\x0eis_maintenance\x18\x01 \x01(\bR\risMaintenance\x12\x18\n" +
	"\aversion\x18\x02 \x01(\tR\aversion\x12!\n" +
	"\fplayer_count\x18\x03 \x01(\x05R\vplayerCount\"\x86\x01\n" +
	"\fErrorMessage\x12\x1d\n" +
	"\n" +
	"error_code\x18\x01 \x01(\tR\terrorCode\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\x12\x18\n" +
	"\acontext\x18\x03 \x01(\tR\acontext\x12\x18\n" +
	"\adetails\x18\x04 \x03(\tR\adetailsB\x0eZ\fpkg/messagesb\x06proto3"

var (
	file_server_messages_proto_rawDescOnce sync.Once
	file_server_messages_proto_rawDescData []byte
)

func file_server_messages_proto_rawDescGZIP() []byte {
	file_server_messages_proto_rawDescOnce.Do(func() {
		file_server_messages_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_server_messages_proto_rawDesc), len(file_server_messages_proto_rawDesc)))
	})
	return file_server_messages_proto_rawDescData
}

var file_server_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_server_messages_proto_goTypes = []any{
	(LobbyStateMessage_LobbyStatus)(0),  // 0: messages.LobbyStateMessage.LobbyStatus
	(*ServerMessage)(nil),               // 1: messages.ServerMessage
	(*LobbyMessage)(nil),                // 2: messages.LobbyMessage
	(*LobbyStateMessage)(nil),           // 3: messages.LobbyStateMessage
	(*LobbyPlayer)(nil),                 // 4: messages.LobbyPlayer
	(*PlayerJoinedMessage)(nil),         // 5: messages.PlayerJoinedMessage
	(*PlayerLeftMessage)(nil),           // 6: messages.PlayerLeftMessage
	(*PlayerUpdatedMessage)(nil),        // 7: messages.PlayerUpdatedMessage
	(*LobbySettingsUpdatedMessage)(nil), // 8: messages.LobbySettingsUpdatedMessage
	(*GameStartingMessage)(nil),         // 9: messages.GameStartingMessage
	(*GameLoadingMessage)(nil),          // 10: messages.GameLoadingMessage
	(*GameMessage)(nil),                 // 11: messages.GameMessage
	(*GameStateMessage)(nil),            // 12: messages.GameStateMessage
	(*GameEventMessage)(nil),            // 13: messages.GameEventMessage
	(*TurnUpdateMessage)(nil),           // 14: messages.TurnUpdateMessage
	(*ChatMessage)(nil),                 // 15: messages.ChatMessage
	(*GlobalChatMessage)(nil),           // 16: messages.GlobalChatMessage
	(*PrivateChatMessage)(nil),          // 17: messages.PrivateChatMessage
	(*LobbyChatMessage)(nil),            // 18: messages.LobbyChatMessage
	(*SystemChatMessage)(nil),           // 19: messages.SystemChatMessage
	(*SystemMessage)(nil),               // 20: messages.SystemMessage
	(*ConnectionMessage)(nil),           // 21: messages.ConnectionMessage
	(*AuthMessage)(nil),                 // 22: messages.AuthMessage
	(*ServerStatusMessage)(nil),         // 23: messages.ServerStatusMessage
	(*ErrorMessage)(nil),                // 24: messages.ErrorMessage
	(*GalaxyGenerateSettings)(nil),      // 25: messages.GalaxyGenerateSettings
}
var file_server_messages_proto_depIdxs = []int32{
	2,  // 0: messages.ServerMessage.lobby_message:type_name -> messages.LobbyMessage
	11, // 1: messages.ServerMessage.game_message:type_name -> messages.GameMessage
	15, // 2: messages.ServerMessage.chat_message:type_name -> messages.ChatMessage
	20, // 3: messages.ServerMessage.system_message:type_name -> messages.SystemMessage
	24, // 4: messages.ServerMessage.error_message:type_name -> messages.ErrorMessage
	3,  // 5: messages.LobbyMessage.lobby_state:type_name -> messages.LobbyStateMessage
	5,  // 6: messages.LobbyMessage.player_joined:type_name -> messages.PlayerJoinedMessage
	6,  // 7: messages.LobbyMessage.player_left:type_name -> messages.PlayerLeftMessage
	7,  // 8: messages.LobbyMessage.player_updated:type_name -> messages.PlayerUpdatedMessage
	8,  // 9: messages.LobbyMessage.settings_updated:type_name -> messages.LobbySettingsUpdatedMessage
	9,  // 10: messages.LobbyMessage.game_starting:type_name -> messages.GameStartingMessage
	10, // 11: messages.LobbyMessage.game_loading:type_name -> messages.GameLoadingMessage
	0,  // 12: messages.LobbyStateMessage.status:type_name -> messages.LobbyStateMessage.LobbyStatus
	4,  // 13: messages.LobbyStateMessage.players:type_name -> messages.LobbyPlayer
	25, // 14: messages.LobbyStateMessage.settings:type_name -> messages.GalaxyGenerateSettings
	4,  // 15: messages.PlayerJoinedMessage.player:type_name -> messages.LobbyPlayer
	4,  // 16: messages.PlayerUpdatedMessage.player:type_name -> messages.LobbyPlayer
	25, // 17: messages.LobbySettingsUpdatedMessage.settings:type_name -> messages.GalaxyGenerateSettings
	25, // 18: messages.GameStartingMessage.final_settings:type_name -> messages.GalaxyGenerateSettings
	12, // 19: messages.GameMessage.game_state:type_name -> messages.GameStateMessage
	13, // 20: messages.GameMessage.game_event:type_name -> messages.GameEventMessage
	14, // 21: messages.GameMessage.turn_update:type_name -> messages.TurnUpdateMessage
	16, // 22: messages.ChatMessage.global:type_name -> messages.GlobalChatMessage
	17, // 23: messages.ChatMessage.private:type_name -> messages.PrivateChatMessage
	18, // 24: messages.ChatMessage.lobby:type_name -> messages.LobbyChatMessage
	19, // 25: messages.ChatMessage.system:type_name -> messages.SystemChatMessage
	21, // 26: messages.SystemMessage.connection:type_name -> messages.ConnectionMessage
	22, // 27: messages.SystemMessage.auth:type_name -> messages.AuthMessage
	23, // 28: messages.SystemMessage.server_status:type_name -> messages.ServerStatusMessage
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_server_messages_proto_init() }
func file_server_messages_proto_init() {
	if File_server_messages_proto != nil {
		return
	}
	file_client_commands_proto_init()
	file_server_messages_proto_msgTypes[0].OneofWrappers = []any{
		(*ServerMessage_LobbyMessage)(nil),
		(*ServerMessage_GameMessage)(nil),
		(*ServerMessage_ChatMessage)(nil),
		(*ServerMessage_SystemMessage)(nil),
		(*ServerMessage_ErrorMessage)(nil),
	}
	file_server_messages_proto_msgTypes[1].OneofWrappers = []any{
		(*LobbyMessage_LobbyState)(nil),
		(*LobbyMessage_PlayerJoined)(nil),
		(*LobbyMessage_PlayerLeft)(nil),
		(*LobbyMessage_PlayerUpdated)(nil),
		(*LobbyMessage_SettingsUpdated)(nil),
		(*LobbyMessage_GameStarting)(nil),
		(*LobbyMessage_GameLoading)(nil),
	}
	file_server_messages_proto_msgTypes[10].OneofWrappers = []any{
		(*GameMessage_GameState)(nil),
		(*GameMessage_GameEvent)(nil),
		(*GameMessage_TurnUpdate)(nil),
	}
	file_server_messages_proto_msgTypes[14].OneofWrappers = []any{
		(*ChatMessage_Global)(nil),
		(*ChatMessage_Private)(nil),
		(*ChatMessage_Lobby)(nil),
		(*ChatMessage_System)(nil),
	}
	file_server_messages_proto_msgTypes[19].OneofWrappers = []any{
		(*SystemMessage_Connection)(nil),
		(*SystemMessage_Auth)(nil),
		(*SystemMessage_ServerStatus)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_server_messages_proto_rawDesc), len(file_server_messages_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_messages_proto_goTypes,
		DependencyIndexes: file_server_messages_proto_depIdxs,
		EnumInfos:         file_server_messages_proto_enumTypes,
		MessageInfos:      file_server_messages_proto_msgTypes,
	}.Build()
	File_server_messages_proto = out.File
	file_server_messages_proto_goTypes = nil
	file_server_messages_proto_depIdxs = nil
}
